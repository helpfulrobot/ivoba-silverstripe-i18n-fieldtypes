###############################################
I18n Fieldtypes Extension Module
###############################################

Info
-----------------------------------------------
Why this module?
SilverStripe and the sapphire Framework lack in the current state full support 
for I18n of Money and Date types.
It also doesnt have one clear way for these Issues, it provides the Zend way 
or the pure PHP way.
But both without full implementation or full access to config options 
for specific formating of these data types.
Here this module provides extensions that aim to provide full access to 
i18n these data types and config options 
to provide flexible formating.
-----------------------------------------------
Examples:
given:
i18n::set_locale('de_DE');

Date Formating the PHP way:
pure SS: $Datetime.Nice = 22/12/2010 4:30pm (this wouldnt be nice f.e in Germany)
with IF: $Datetime.Nice = 22.12.2010 16:30  (this fits)

A common way in SS was to use $Datetime.FormatI18N(%e. %B %G).
This expected a PHP locale that had to be set additional to i18n::set_locale('de_DE');
like: setlocale (LC_TIME, 'de_DE@euro', 'de_DE.UTF-8', 'de_DE', 'de', 'ge');
... and this had to be set everywhere manually in the templates; not so nice.
with IF its determend in an lang file and works everywhere at once.

You can now also use the Date Formating the Zend way:
This gives full access to options of the powerful Zend Date class:
http://framework.zend.com/manual/en/zend.date.html
This is also independent from the PHP locale 
and works soly through 
i18n::set_default_locale('de_DE');!
or 
i18n::set_locale('de_DE');

-----------------------------------------------
Money formating
given:
Payment::set_site_currency('EUR');
 
via the Currency Class (deprecated):
pure SS: €1233.45 (f.e. in Germany it would be expected to be: €1.233,45 
and mostly even: 1.233,45 EUR)
with IF: €1.233,45

even better is to use the Zend way:
This gives full access to options of the powerful Money resp. Zend Currency Class:
http://framework.zend.com/manual/en/zend.currency.options.html
with IF: 1.233,45 EUR or €1.233,45 EUR or EUR1.233,45 etc.

This module allows also total customization throught static setters.
So if you like to do fancy formating like "@12?233!00 EUR" or "2010, März Freitag 12. Nachm."
you now should be able.

Maintainer Contact
-----------------------------------------------
see https://code.google.com/p/silverstripe-i18n-fieldtypes/

Requirements
-----------------------------------------------
Sapphire 2.4+

Documentation
-----------------------------------------------
see https://code.google.com/p/silverstripe-ecommerce/


Installation Instructions
-----------------------------------------------
1. Find out how to add modules to SS and add module as per usual.

2. copy configurations from this module's _config.php file
into mysite/_config.php file and edit settings as required.
NB. the idea is not to edit this module so that you can
upgrade this module in one go without redoing the settings.
Instead customise your application using your mysite folder.